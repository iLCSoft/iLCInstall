##############################################################################
#
# Example configuration file for installing LCFIPlus
#
# Author: Jeremy McCormick <jeremym@slac.stanford.edu>
# Date: May 13, 2013
#
##############################################################################

import os, sys

# read package versions from external file
path_where_this_file_lives = os.path.dirname(config_file)
versions_file = os.path.join(path_where_this_file_lives, 'release-versions.py')
exec(compile(open(versions_file, "rb").read(), version_file, "exec"))

# installation directory
if not 'ilcsoft_install_dir' in dir():
    if not 'ilcsoft_install_prefix' in dir():
        # default install prefix
        ilcsoft_install_prefix = '$HOME/ilcsoft'

    ilcsoft_install_dir = os.path.join(ilcsoft_install_prefix, ilcsoft_release)

ilcsoft = ILCSoft(ilcsoft_install_dir)

# python variable for referring the ILC Home directory
# used to link or use already installed packages (SL5)
# --- set in release-versions.py ---
#ilcPath = '/afs/desy.de/group/it/ilcsoft/'
#ilcPath = '/afs/desy.de/project/ilcsoft/sw/i386_gcc41_sl5/'
if not 'ilcPath' in dir():
    'raise ilcPath not set'

ilcPath = os.path.normpath( ilcPath ) + '/' # make sure there it ends with /

# global options
ilcsoft.env['MAKEOPTS']='-j4'
ilcsoft.env['CXX']='g++'
ilcsoft.env['CC']='gcc'
ilcsoft.env['FC']='gfortran'
if( ilcsoft.os.isSL(4) ):
    ilcsoft.env['FC']='g77'

ilcsoft.envcmake['BUILD_32BIT_COMPATIBLE']='OFF'

# ----- build and install documentation -------------
ilcsoft.envcmake['INSTALL_DOC']='OFF'


#ilcsoft.envcmake['CMAKE_BUILD_TYPE']= 'Debug'
ilcsoft.envcmake['CMAKE_BUILD_TYPE']= 'RelWithDebInfo'
ilcsoft.downloadType = 'svn'

# additional system pathes for FIND_LIBRARY, FIND_PATH
#-----------------------------------------------
#ilcsoft.env['CMAKE_LIBRARY_PATH']='/usr/lib/gcc/i386-redhat-linux/3.4.3:/another/path/lib'
#ilcsoft.env['CMAKE_INCLUDE_PATH']='/usr/include/c++/3.4.3:/another/path/include'
#-----------------------------------------------

ilcsoft.install(ILCUTIL(ILCUTIL_version))
ilcsoft.install(CMake(CMake_version))
ilcsoft.install(GSL(GSL_version))
ilcsoft.install(CLHEP(CLHEP_version))
ilcsoft.install(LCIO(LCIO_version))
ilcsoft.module('LCIO').envcmake['INSTALL_DOC']='OFF'
ilcsoft.install(CED(CED_version))
ilcsoft.install(Marlin(Marlin_version))
ilcsoft.module('Marlin').envcmake['MARLIN_AIDA']='OFF'
ilcsoft.module('Marlin').envcmake['MARLIN_LCCD']='OFF'
ilcsoft.install(MarlinUtil(MarlinUtil_version))
ilcsoft.install(GEAR(GEAR_version))
ilcsoft.module('GEAR').envcmake['GEAR_TGEO']='ON'
ilcsoft.install(CEDViewer(CEDViewer_version))
ilcsoft.install(LCFIVertex(LCFIVertex_version))

try:
    ilcsoft.use(ROOT(os.environ['ROOTSYS']))
except KeyError:
    print 'ROOTSYS was not defined in the environment' 
    raise

ilcsoft.install(MarlinPKG('LCFIPlus', LCFIPlus_version)) 
ilcsoft.module('LCFIPlus').download.root='marlinreco'
ilcsoft.module('LCFIPlus').addDependency(['LCIO', 'GEAR', 'ROOT', 'Marlin', 'MarlinUtil', 'LCFIVertex'])
