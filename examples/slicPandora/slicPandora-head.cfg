###########################################
#
# slicPandora HEAD config
#
# Jeremy McCormick, SLAC
#
###########################################

import os, sys

# read package versions from external file
path_where_this_file_lives = os.path.dirname( config_file )
versions_file = os.path.join( path_where_this_file_lives, "slicPandora-head-versions.py" )
exec(compile(open(versions_file, "rb").read(), versions_file, "exec"))

# installation directory
if not 'ilcsoft_install_dir' in dir():
    if not 'ilcsoft_install_prefix' in dir():
        # default install prefix
        ilcsoft_install_prefix = "$HOME/ilcsoft"

    ilcsoft_install_dir = os.path.join( ilcsoft_install_prefix, ilcsoft_release )

ilcsoft = ILCSoft( ilcsoft_install_dir )

# python variable for referring the ILC Home directory
# used to link or use already installed packages (SL5)
# --- set in release-versions.py ---
#ilcPath = "/afs/desy.de/group/it/ilcsoft/"
#ilcPath = "/afs/desy.de/project/ilcsoft/sw/i386_gcc41_sl5/"
if not 'ilcPath' in dir():
    "raise ilcPath not set"

#ilcPath = os.path.normpath( ilcPath ) + '/' # make sure there it ends with /

# global options
ilcsoft.env["MAKEOPTS"]="-j8"
ilcsoft.env["CXX"]="g++"
ilcsoft.env["CC"]="gcc"
ilcsoft.env["FC"]="gfortran"
if( ilcsoft.os.isSL(4) ):
    ilcsoft.env["FC"]="g77"

#--------- set to 'OFF' to build 64-bit natively -------
ilcsoft.envcmake["BUILD_32BIT_COMPATIBLE"]="OFF"

# ----- build and install documentation -------------
ilcsoft.envcmake["INSTALL_DOC"]="OFF"

#ilcsoft.envcmake["CMAKE_BUILD_TYPE"]= "Debug"
ilcsoft.envcmake["CMAKE_BUILD_TYPE"]= "RelWithDebInfo"
ilcsoft.downloadType = "svn"

# additional system pathes for FIND_LIBRARY, FIND_PATH
#-----------------------------------------------
#ilcsoft.env["CMAKE_LIBRARY_PATH"]="/usr/lib/gcc/i386-redhat-linux/3.4.3:/another/path/lib"
#ilcsoft.env["CMAKE_INCLUDE_PATH"]="/usr/include/c++/3.4.3:/another/path/include"
#-----------------------------------------------


####################################################################
#
####################################################################

# cmake
ilcsoft.install( CMake( CMake_version  ))

# ilcutil
ilcsoft.install( ILCUTIL( ILCUTIL_version ))

# lcio
ilcsoft.install( LCIO( LCIO_version )) 
ilcsoft.module("LCIO").envcmake['INSTALL_JAR']='OFF'
ilcsoft.module("LCIO").envcmake['INSTALL_DOC']='OFF'

# PandoraPFANew
ilcsoft.install( PandoraPFANew( PandoraPFANew_version ))
ilcsoft.module("PandoraPFANew").envcmake["PANDORA_MONITORING"]='OFF'
ilcsoft.module("PandoraPFANew").envcmake["PANDORA_LC_CONTENT"]='ON'

# slicPandora
ilcsoft.install( SlicPandora( SlicPandora_version ))
