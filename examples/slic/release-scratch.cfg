##############################################################################
#
# Configuration file for installing SLIC and
# all required packages from scratch
#
# Note: Please modify the directories according to your system
#
# Author: F.Gaede, DESY
# Date: April, 2013
#
##############################################################################

import os, sys

# read package versions from external file
path_where_this_file_lives = os.path.dirname( config_file )
versions_file = os.path.join( path_where_this_file_lives, "release-versions.py" )
exec(compile(open(versions_file, "rb").read(), versions_file, "exec"))

# installation directory
if not 'ilcsoft_install_dir' in dir():
    if not 'ilcsoft_install_prefix' in dir():
        # default install prefix
        ilcsoft_install_prefix = "$HOME/ilcsoft"

    ilcsoft_install_dir = os.path.join( ilcsoft_install_prefix, ilcsoft_release )

ilcsoft = ILCSoft( ilcsoft_install_dir )

# python variable for referring the ILC Home directory
# used to link or use already installed packages (SL5)
# --- set in release-versions.py ---
#ilcPath = "/afs/desy.de/group/it/ilcsoft/"
#ilcPath = "/afs/desy.de/project/ilcsoft/sw/i386_gcc41_sl5/"
if not 'ilcPath' in dir():
    "raise ilcPath not set"

#ilcPath = os.path.normpath( ilcPath ) + '/' # make sure there it ends with /

# global options
ilcsoft.env["MAKEOPTS"]="-j8"
ilcsoft.env["CXX"]="g++"
ilcsoft.env["CC"]="gcc"
ilcsoft.env["FC"]="gfortran"
if( ilcsoft.os.isSL(4) ):
    ilcsoft.env["FC"]="g77"

#--------- uncomment the following to build 32-bit mode on 64bit machines---
# default is now 64bit-native build
#
 #ilcsoft.env["CXXFLAGS"]="-m32"
 #ilcsoft.env["CFLAGS"]="-m32"
 #ilcsoft.env["FFLAGS"]="-m32"
 #ilcsoft.env["LDFLAGS"]="-m32"


#--------- set to 'OFF' to build 64-bit natively -------
ilcsoft.envcmake["BUILD_32BIT_COMPATIBLE"]="OFF"
#----------------------------------------------------------------

# ----- build and install documentation -------------
ilcsoft.envcmake["INSTALL_DOC"]="ON"


#ilcsoft.envcmake["CMAKE_BUILD_TYPE"]= "Debug"
ilcsoft.envcmake["CMAKE_BUILD_TYPE"]= "RelWithDebInfo"

# additional system pathes for FIND_LIBRARY, FIND_PATH
#-----------------------------------------------
#ilcsoft.env["CMAKE_LIBRARY_PATH"]="/usr/lib/gcc/i386-redhat-linux/3.4.3:/another/path/lib"
#ilcsoft.env["CMAKE_INCLUDE_PATH"]="/usr/include/c++/3.4.3:/another/path/include"
#-----------------------------------------------


####################################################################
#
####################################################################

#-------------------------------------------------------------------------
# prerequisites: installed versions of Java, geant4, cernlib and mysql:
#  -> modify according to your system !
#-------------------------------------------------------------------------

#  when using 'link' or 'use' please specify full path to installed package

# Java
if 'Java_path' in dir():
    ilcsoft.link( Java( Java_path ))

ilcutil = ILCUTIL( ILCUTIL_version )
ilcutil.download.type="GitHub"
ilcsoft.install( ilcutil )

# -- xercesc
ilcsoft.install( XercesC( XercesC_version ))

# -- HepPDT
ilcsoft.install( HepPDT( HepPDT_version ))

#----- install geant4 

ilcsoft.install( Geant4( Geant4_version ))
geant4=ilcsoft.module("Geant4")
geant4.envcmake["GEANT4_INSTALL_DATA"]='ON'
geant4.envcmake["GEANT4_USE_SYSTEM_EXPAT"]='OFF' # ignored ??
geant4.envcmake["GEANT4_USE_SYSTEM_CLHEP"]='OFF'
geant4.envcmake["GEANT4_USE_OPENGL_X11"]='ON'
geant4.envcmake["GEANT4_USE_QT"]='OFF' # requires qt
#geant4.envcmake["QT_QMAKE_EXECUTABLE"]=/path/to/qmake
if 'XERCESC_ROOT_DIR' in dir():
    geant4.envcmake["XERCESC_ROOT_DIR"]=XERCESC_ROOT_DIR
#if 'XERCESC_INCLUDE_DIR' in dir() and 'XERCESC_LIBRARY' in dir():
    #geant4.envcmake["GEANT4_USE_GDML"]='ON' # requires xerces-c
    #geant4.envcmake["XERCESC_INCLUDE_DIR"]=XERCESC_INCLUDE_DIR
    #geant4.envcmake["XERCESC_LIBRARY"]=XERCESC_LIBRARY


#--- lcio
ilcsoft.install( LCIO( LCIO_version )) 
#----- this will build the optional ROOT dictionary for LCIO -----
#------ set to OFF  if you don't want it
#ilcsoft.module("LCIO").envcmake['BUILD_ROOTDICT']='ON'
#ilcsoft.module("LCIO").envcmake['ROOT_HOME']='${ROOTSYS}'
ilcsoft.module("LCIO").envcmake['INSTALL_JAR']='OFF'
ilcsoft.module("LCIO").envcmake['INSTALL_DOC']='OFF'

#--- ddsegmentation
ilcsoft.install( DDSegmentation( DDSegmentation_version ))

#--- gdml
ilcsoft.install(GDML(GDML_version)) 
ilcsoft.module("GDML").envcmake['INSTALL_DOC']='OFF'

#--- lcdd
ilcsoft.install( LCDD( LCDD_version )) 
ilcsoft.module("LCDD").envcmake['INSTALL_DOC']='OFF'

#--- slic
ilcsoft.install( SLIC( SLIC_version ))
ilcsoft.module("SLIC").envcmake['INSTALL_DOC']='OFF'

#-------------------------------------------------------------------

# cmake
ilcsoft.install( CMake( CMake_version  ))

# end of configuration file

